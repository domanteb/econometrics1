curve(dbeta(x, 0.5, 0.5), main="Beta skirstinio tankis", ylab="", lwd=2, col=4)
n=100
curve(n, dbeta(x, 0.5, 0.5), main="Beta skirstinio tankis", ylab="", lwd=2, col=4)
curve(dbeta(100, 0.5, 0.5), main="Beta skirstinio tankis", ylab="", lwd=2, col=4)
sim = replicate(10000, meanMC(100))
plot(density(sim), main="Vidukrio skirstinys, kai n=100", xlab="x", ylab="Tankis",
lwd=2, xlim=c(0.3, 0.65))
curve(dnorm(x, mean=mean(sim), sd=sd(sim)), add=TRUE, col=2, lwd=2, lty=2 )
legend("topleft", c("MC tankis", "Normalusis tankis"),
lwd=2, col = 1:2,
inset = .05, bg = "gray90")
sim = replicate(10000, meanMC(100))
plot(density(sim), main="Vidukrio skirstinys, kai n=100", xlab="x", ylab="Tankis",
lwd=2, xlim=c(0.3, 0.65))
curve(dnorm(x, mean=mean(sim), sd=sd(sim)), add=TRUE, col=2, lwd=2, lty=2 )
legend("topleft", c("MC tankis", "Normalusis tankis"),
lwd=2, col = 1:2,
inset = .05, bg = "gray90")
?par
sim = replicate(10000, meanMC(100))
plot(density(sim), main="Vidukrio skirstinys, kai n=100", xlab="x", ylab="Tankis",
lwd=2, xlim=c(0.3, 0.65))
curve(dnorm(x, mean=mean(sim), sd=sd(sim)), add=TRUE, col=2, lwd=2, lty=2 )
legend("topleft", c("MC tankis", "Normalusis tankis"),
lwd=2, col = 1:2,
inset = .05, bg = "gray90")
meanMC <- function(n) mean(rbeta(n, 0.5, 0.5))
sim = replicate(10000, meanMC(100))
plot(density(sim), main="Vidukrio skirstinys, kai n=100", xlab="x", ylab="Tankis",
lwd=2, xlim=c(0.3, 0.65))
curve(dnorm(x, mean=mean(sim), sd=sd(sim)), add=TRUE, col=2, lwd=2, lty=2 )
legend("topleft", c("MC tankis", "Normalusis tankis"),
lwd=2, col = 1:2,
inset = .05, bg = "gray90")
sim
meanMC <- function(n) mean(rbeta(n, 0.5, 0.5)) #vidurkio funkcija pagal Monte-Carlo metodą
sim = replicate(10000, meanMC(100))
plot(density(sim), main="Vidukrio skirstinys, kai n=100", xlab="x", ylab="Tankis",
lwd=2, xlim=c(0.3, 0.65))
#curve(dnorm(x, mean=mean(sim), sd=sd(sim)), add=TRUE, col=2, lwd=2, lty=2 )
legend("topleft", c("MC tankis", "Normalusis tankis"),
lwd=2, col = 1:2,
inset = .05, bg = "gray90")
?curve
meanMC <- function(n) mean(rbeta(n, 0.5, 0.5)) #vidurkio funkcija pagal Monte-Carlo metodą
sim = replicate(10000, meanMC(100))
plot(density(sim), main="Vidukrio skirstinys, kai n=100", xlab="x", ylab="Tankis",
lwd=2, xlim=c(0.3, 0.65), col=3)
#curve(dnorm(x, mean=mean(sim), sd=sd(sim)), add=TRUE, col=2, lwd=2, lty=2 )
legend("topleft", c("MC tankis", "Normalusis tankis"),
lwd=2, col = 1:2,
inset = .05, bg = "gray90")
meanMC <- function(n) mean(rbeta(n, 0.5, 0.5)) #vidurkio funkcija pagal Monte-Carlo metodą
sim = replicate(10000, meanMC(100))
plot(density(sim), main="Vidukrio skirstinys, kai n=100", xlab="x", ylab="Tankis",
lwd=2, xlim=c(0.3, 0.65), col=3)
#curve(dnorm(x, mean=mean(sim), sd=sd(sim)), add=TRUE, col=5, lwd=2, lty=2 )
legend("topleft", c("MC tankis", "Normalusis tankis"),
lwd=2, col = 1:2,
inset = .05, bg = "gray90")
?col
meanMC <- function(n) mean(rbeta(n, 0.5, 0.5)) #vidurkio funkcija pagal Monte-Carlo metodą
sim = replicate(10000, meanMC(100))
plot(density(sim), main="Vidukrio skirstinys, kai n=100", xlab="x", ylab="Tankis",
lwd=2, xlim=c(0.3, 0.65), col=3)
#curve(dnorm(x, mean=mean(sim), sd=sd(sim)), add=TRUE, col=6, lwd=2, lty=2 )
legend("topleft", c("MC tankis", "Normalusis tankis"),
lwd=2, col = 1:2,
inset = .05, bg = "gray90")
meanMC <- function(n) mean(rbeta(n, 0.5, 0.5)) #vidurkio funkcija pagal Monte-Carlo metodą
sim = replicate(10000, meanMC(100))
plot(density(sim), main="Vidukrio skirstinys, kai n=100", xlab="x", ylab="Tankis",
lwd=2, xlim=c(0.3, 0.65), col=6)
#curve(dnorm(x, mean=mean(sim), sd=sd(sim)), add=TRUE, col=6, lwd=2, lty=2 )
legend("topleft", c("MC tankis", "Normalusis tankis"),
lwd=2, col = 1:2,
inset = .05, bg = "gray90")
meanMC <- function(n) mean(rbeta(n, 0.5, 0.5)) #vidurkio funkcija pagal Monte-Carlo metodą
sim = replicate(10000, meanMC(100))
plot(density(sim), main="Vidukrio skirstinys, kai n=100", xlab="x", ylab="Tankis",
lwd=2, xlim=c(0.3, 0.65), col=2)
#curve(dnorm(x, mean=mean(sim), sd=sd(sim)), add=TRUE, col=6, lwd=2, lty=2 )
legend("topleft", c("MC tankis", "Normalusis tankis"),
lwd=2, col = 1:2,
inset = .05, bg = "gray90")
meanMC <- function(n) mean(rbeta(n, 0.5, 0.5)) #vidurkio funkcija pagal Monte-Carlo metodą
sim = replicate(10000, meanMC(100))
plot(density(sim), main="Vidukrio skirstinys, kai n=100", xlab="x", ylab="Tankis",
lwd=2, xlim=c(0.3, 0.65), col=2)
legend("topleft","MC tankis", lwd=2, col = 1:2, inset = .05, bg = "gray90")
meanMC <- function(n) mean(rbeta(n, 0.5, 0.5)) #vidurkio funkcija pagal Monte-Carlo metodą
sim = replicate(10000, meanMC(100))
plot(density(sim), main="Vidukrio skirstinys, kai n=100", xlab="x", ylab="Tankis",
lwd=2, xlim=c(0.3, 0.65), col=2)
legend("topleft","MC tankis", lwd=2, col = 2, inset = .05)
meanMC <- function(n) mean(rbeta(n, 0.5, 0.5)) #vidurkio funkcija pagal Monte-Carlo metodą
sim = replicate(10000, meanMC(100))
plot(density(sim), main="Vidukrio skirstinys, kai n=100", xlab="x", ylab="Tankis",
lwd=2, xlim=c(0.3, 0.65), col=2)
legend("topright","MC tankis", lwd=2, col = 2)
#, inset = .05)
meanMC <- function(n) mean(rbeta(n, 0.5, 0.5)) #vidurkio funkcija pagal Monte-Carlo metodą
sim = replicate(10000, meanMC(100))
plot(density(sim), main="Vidukrio skirstinys, kai n=100", xlab="x", ylab="Tankis",
lwd=2, xlim=c(0.3, 0.65), col=2)
legend("topright","MC tankis", lwd=2, col = 2, inset = .05)
