unique(dataf_noskip$user) #vartotojai, nepraleidę nei vieno klausimo
ind <- with(dataf, which(skipped =="TRUE"))
dataf_skipped <- dataf[ind,] #duomenų lentelė su praleistais klausimais
users <- unique(dataf_skipped$user) #vartotojai, praleidę bent vieną klausimą
users
ind <- with(dataf, which(is.element(dataf$user, users) =="TRUE"))
dataf_noskip <- dataf[-ind,] #duomenų lentelė be vartotojų, praleidusių klausimus
unique(dataf_noskip$user) #vartotojai, nepraleidę nei vieno klausimo
ind <- with(dataf, which(skipped =="TRUE"))
dataf_skipped <- dataf[ind,] #duomenų lentelė su praleistais klausimais
users <- unique(dataf_skipped$user) #vartotojai, praleidę bent vieną klausimą
users
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
# Chunk 2
dataf=read.csv("R_programing_swirlResults.csv", stringsAsFactors = FALSE)
View(dataf)
# Chunk 3
sapply(dataf, class)
# Chunk 4
dataf <- transform(dataf, datetime = as.POSIXlt(datetime), sysTime = as.POSIXlt(sysTime) )
# Chunk 5
unique(dataf$user)
# Chunk 6
dataf=dataf[!(dataf$user=="1vbutkus" | dataf$user=="aaa" | dataf$user=="testas"),]
unique(dataf$user)
# Chunk 7
dataf$user[dataf$user=="gyse3054"] <- "gyse"
dataf$user[dataf$user=="Juste" | dataf$user=="ju" | dataf$user=="j"] <- "juste"
dataf$user[dataf$user=="rokasalek"] <- "rokasaleks"
unique(dataf$user)
# Chunk 8
dataf2 <- dataf[,c(7, 9, 10, 12, 14)]
dup <- which(duplicated(dataf2), TRUE)
dataf <- dataf[-dup,]
dataf
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
# Chunk 2
dataf=read.csv("R_programing_swirlResults.csv", stringsAsFactors = FALSE)
View(dataf)
# Chunk 3
sapply(dataf, class)
# Chunk 4
dataf <- transform(dataf, datetime = as.POSIXlt(datetime), sysTime = as.POSIXlt(sysTime) )
# Chunk 5
unique(dataf$user)
# Chunk 6
dataf=dataf[!(dataf$user=="1vbutkus" | dataf$user=="aaa" | dataf$user=="testas"),]
unique(dataf$user)
# Chunk 7
dataf$user[dataf$user=="gyse3054"] <- "gyse"
dataf$user[dataf$user=="Juste" | dataf$user=="ju" | dataf$user=="j"] <- "juste"
dataf$user[dataf$user=="rokasalek"] <- "rokasaleks"
unique(dataf$user)
# Chunk 8
dataf2 <- dataf[,c(7, 9, 10, 12, 14)]
dup <- which(duplicated(dataf2), TRUE)
dataf <- dataf[-dup,]
dataf
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
# Chunk 2
dataf=read.csv("R_programing_swirlResults.csv", stringsAsFactors = FALSE)
View(dataf)
# Chunk 3
sapply(dataf, class)
# Chunk 4
dataf <- transform(dataf, datetime = as.POSIXlt(datetime), sysTime = as.POSIXlt(sysTime) )
# Chunk 5
unique(dataf$user)
# Chunk 6
dataf=dataf[!(dataf$user=="1vbutkus" | dataf$user=="aaa" | dataf$user=="testas"),]
unique(dataf$user)
# Chunk 7
dataf$user[dataf$user=="gyse3054"] <- "gyse"
dataf$user[dataf$user=="Juste" | dataf$user=="ju" | dataf$user=="j"] <- "juste"
dataf$user[dataf$user=="rokasalek"] <- "rokasaleks"
unique(dataf$user)
dataf2 <- dataf[,c(7, 9, 10, 12, 14)]
dup <- which(duplicated(dataf2), TRUE)
dataf <- dataf[-dup,]
ind <- with(dataf, which(skipped =="TRUE"))
dataf_skipped <- dataf[ind,] #duomenų lentelė su praleistais klausimais
users <- unique(dataf_skipped$user) #vartotojai, praleidę bent vieną klausimą
ind <- with(dataf, which(is.element(dataf$user, users) =="TRUE"))
dataf_noskip <- dataf[-ind,] #duomenų lentelė be vartotojų, praleidusių klausimus
unique(dataf_noskip$user) #vartotojai, nepraleidę nei vieno klausimo
dataf_noskip <- dataf_noskip[,c(7, 9)]
dup <- which(duplicated(dataf_noskip), TRUE)
dataf_noskip <- dataf_noskip[-dup,]
table(dataf_noskip$user)
table(dataf_skipped$user)
dataf_skipped <- unique(dataf_skipped[c("user", "lesson_name")])
ind <- with(dataf, which(is.element(dataf$user, users) =="TRUE"))
dataf2 <- dataf[ind,]
dataf2 <- dataf2[,c(7, 9)]
dup <- which(duplicated(dataf2), TRUE)
dataf2 <- dataf2[-dup,] #visos vartotojų, praleidusių bent vieną klausimą, pateiktos pamokos
#16 - pamokos, kurias pateikė + pamokos, kurias nepilnai atliko = nepilnai atsiskaitytos pamokos
16-table(dataf2$user)+table(dataf_skipped$user)
dataf_time <- dataf[,c(3, 6, 7, 9, 13)]
dataf2 <- dataf[,c(7,9)]
dup <- which(duplicated(dataf2), TRUE)
dataf_time <- dataf_time[-dup,]
real_taketime <- round(difftime(dataf_time$sysTime, dataf_time$datetime, units="mins"))
dataf_time <- cbind(dataf_time, real_taketime)
lessons <- split(dataf_time, f=dataf_time$lesson_name)
time_decl <- sapply(lessons, function(x) round(mean(x$takeTime), 2))
sort(time_decl)
ind <- with(dataf_time, which(df_time$real_taketime>60))
dataf_time <- dataf_time[-ind, ]
lessons <- split(dataf_time, f=dataf_time$lesson_name)
time_taken <- sapply(lessons, function(x) round(mean(x$real_taketime), 2))
sort(time_taken)
ind <- with(dataf_time, which(dataf_time$real_taketime>60))
dataf_time <- dataf_time[-ind, ]
lessons <- split(dataf_time, f=dataf_time$lesson_name)
time_taken <- sapply(lessons, function(x) round(mean(x$real_taketime), 2))
sort(time_taken)
timedif <- abs(dataf_time$takeTime - dataf_time$real_taketime)
mean(timedif)
head(sort(time_decl, decreasing=TRUE))
ind <- with(df, which(skipped =="TRUE"))
df2 <- df[ind,] #praleisti klausimai
head(sort(table(df2$lesson_name), decreasing=TRUE))
ind <- with(dataf, which(correct =="FALSE"))
dataf2 <- dataf[ind,] #neteisingi atsakymai
head(sort(table(dataf2$lesson_name), decreasing=TRUE))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
# Chunk 2
dataf=read.csv("R_programing_swirlResults.csv", stringsAsFactors = FALSE)
View(dataf)
# Chunk 3
sapply(dataf, class)
# Chunk 4
dataf <- transform(dataf, datetime = as.POSIXlt(datetime), sysTime = as.POSIXlt(sysTime) )
# Chunk 5
unique(dataf$user)
# Chunk 6
dataf=dataf[!(dataf$user=="1vbutkus" | dataf$user=="aaa" | dataf$user=="testas"),]
unique(dataf$user)
# Chunk 7
dataf$user[dataf$user=="gyse3054"] <- "gyse"
dataf$user[dataf$user=="Juste" | dataf$user=="ju" | dataf$user=="j"] <- "juste"
dataf$user[dataf$user=="rokasalek"] <- "rokasaleks"
unique(dataf$user)
# Chunk 8
dataf2 <- dataf[,c(7, 9, 10, 12, 14)]
dup <- which(duplicated(dataf2), TRUE)
dataf <- dataf[-dup,]
# Chunk 9
ind <- with(dataf, which(skipped =="TRUE"))
dataf_skipped <- dataf[ind,] #duomenų lentelė su praleistais klausimais
users <- unique(dataf_skipped$user) #vartotojai, praleidę bent vieną klausimą
ind <- with(dataf, which(is.element(dataf$user, users) =="TRUE"))
dataf_noskip <- dataf[-ind,] #duomenų lentelė be vartotojų, praleidusių klausimus
unique(dataf_noskip$user) #vartotojai, nepraleidę nei vieno klausimo
# Chunk 10
dataf_noskip <- dataf_noskip[,c(7, 9)]
dup <- which(duplicated(dataf_noskip), TRUE)
dataf_noskip <- dataf_noskip[-dup,]
table(dataf_noskip$user)
# Chunk 11
table(dataf_skipped$user)
# Chunk 12
dataf_skipped <- unique(dataf_skipped[c("user", "lesson_name")])
ind <- with(dataf, which(is.element(dataf$user, users) =="TRUE"))
dataf2 <- dataf[ind,]
dataf2 <- dataf2[,c(7, 9)]
dup <- which(duplicated(dataf2), TRUE)
dataf2 <- dataf2[-dup,] #visos vartotojų, praleidusių bent vieną klausimą, pateiktos pamokos
#16 - pamokos, kurias pateikė + pamokos, kurias nepilnai atliko = nepilnai atsiskaitytos pamokos
16-table(dataf2$user)+table(dataf_skipped$user)
# Chunk 13
dataf_time <- dataf[,c(3, 6, 7, 9, 13)]
dataf2 <- dataf[,c(7,9)]
dup <- which(duplicated(dataf2), TRUE)
dataf_time <- dataf_time[-dup,]
real_taketime <- round(difftime(dataf_time$sysTime, dataf_time$datetime, units="mins"))
dataf_time <- cbind(dataf_time, real_taketime)
# Chunk 14
lessons <- split(dataf_time, f=dataf_time$lesson_name)
time_decl <- sapply(lessons, function(x) round(mean(x$takeTime), 2))
sort(time_decl)
# Chunk 15
ind <- with(dataf_time, which(dataf_time$real_taketime>60))
dataf_time <- dataf_time[-ind, ]
lessons <- split(dataf_time, f=dataf_time$lesson_name)
time_taken <- sapply(lessons, function(x) round(mean(x$real_taketime), 2))
sort(time_taken)
# Chunk 16
timedif <- abs(dataf_time$takeTime - dataf_time$real_taketime)
mean(timedif)
# Chunk 17
head(sort(time_decl, decreasing=TRUE))
ind <- with(df, which(skipped =="TRUE"))
df2 <- df[ind,] #praleisti klausimai
head(sort(table(df2$lesson_name), decreasing=TRUE))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
# Chunk 2
dataf=read.csv("R_programing_swirlResults.csv", stringsAsFactors = FALSE)
View(dataf)
# Chunk 3
sapply(dataf, class)
# Chunk 4
dataf <- transform(dataf, datetime = as.POSIXlt(datetime), sysTime = as.POSIXlt(sysTime) )
# Chunk 5
unique(dataf$user)
c=x$user %in% c("1vbutkus", "aaa", "testas")
dataf=dataf[!c,]
##dataf=dataf[!(dataf$user=="1vbutkus" | dataf$user=="aaa" | dataf$user=="testas"),]
unique(dataf$user)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
# Chunk 2
dataf=read.csv("R_programing_swirlResults.csv", stringsAsFactors = FALSE)
View(dataf)
# Chunk 3
sapply(dataf, class)
# Chunk 4
dataf <- transform(dataf, datetime = as.POSIXlt(datetime), sysTime = as.POSIXlt(sysTime) )
# Chunk 5
unique(dataf$user)
c=dataf$user %in% c("1vbutkus", "aaa", "testas")
dataf=dataf[!c,]
##dataf=dataf[!(dataf$user=="1vbutkus" | dataf$user=="aaa" | dataf$user=="testas"),]
unique(dataf$user)
dataf$user[dataf$user=="gyse3054"] <- "gyse"
dataf$user[dataf$user=="Juste" | dataf$user=="ju" | dataf$user=="j"] <- "juste"
dataf$user[dataf$user=="rokasalek"] <- "rokasaleks"
unique(dataf$user)
a=dataf(dataf$user, dataf$lesson_name, dataf$attempt, dataf$question_number, dataf$correct, dataf$skipped)
table(duplicated(a))
##dataf2 <- dataf[,c(7, 9, 10, 12, 14)]
#dup <- which(duplicated(dataf2), TRUE)
#dataf <- dataf[-dup,]
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
# Chunk 2
dataf=read.csv("R_programing_swirlResults.csv", stringsAsFactors = FALSE)
View(dataf)
# Chunk 3
sapply(dataf, class)
# Chunk 4
dataf <- transform(dataf, datetime = as.POSIXlt(datetime), sysTime = as.POSIXlt(sysTime) )
# Chunk 5
unique(dataf$user)
# Chunk 6
c=dataf$user %in% c("1vbutkus", "aaa", "testas")
dataf=dataf[!c,]
unique(dataf$user)
# Chunk 7
dataf$user[dataf$user=="gyse3054"] <- "gyse"
dataf$user[dataf$user=="Juste" | dataf$user=="ju" | dataf$user=="j"] <- "juste"
dataf$user[dataf$user=="rokasalek"] <- "rokasaleks"
unique(dataf$user)
a=dataf(dataf$user, dataf$lesson_name, dataf$attempt, dataf$question_number, dataf$correct, dataf$skipped)
table(duplicated(a))
##dataf2 <- dataf[,c(7, 9, 10, 12, 14)]
#dup <- which(duplicated(dataf2), TRUE)
#dataf <- dataf[-dup,]
a=data.frame(dataf$user, dataf$lesson_name, dataf$attempt, dataf$question_number, dataf$correct, dataf$skipped)
table(duplicated(a))
##dataf2 <- dataf[,c(7, 9, 10, 12, 14)]
#dup <- which(duplicated(dataf2), TRUE)
#dataf <- dataf[-dup,]
Matome, kad dubliavosi, tai ištriname besidubliavusius duomenis:
dataf=dataf[!duplicated(a),]
a=data.frame(m$user, m$lesson_name, m$attempt, m$question_number, m$correct, m$skipped)
table(duplicated(a))
Matome, kad dubliavosi, tai ištriname besidubliavusius duomenis:
dataf=dataf[!duplicated(a),]
a=data.frame(dataf$user, dataf$lesson_name, dataf$attempt, dataf$question_number, dataf$correct, dataf$skipped)
table(duplicated(a))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
# Chunk 2
dataf=read.csv("R_programing_swirlResults.csv", stringsAsFactors = FALSE)
View(dataf)
# Chunk 3
sapply(dataf, class)
# Chunk 4
dataf <- transform(dataf, datetime = as.POSIXlt(datetime), sysTime = as.POSIXlt(sysTime) )
# Chunk 5
unique(dataf$user)
# Chunk 6
c=dataf$user %in% c("1vbutkus", "aaa", "testas")
dataf=dataf[!c,]
unique(dataf$user)
# Chunk 7
dataf$user[dataf$user=="gyse3054"] <- "gyse"
dataf$user[dataf$user=="Juste" | dataf$user=="ju" | dataf$user=="j"] <- "juste"
dataf$user[dataf$user=="rokasalek"] <- "rokasaleks"
unique(dataf$user)
# Chunk 8
a=data.frame(dataf$user, dataf$lesson_name, dataf$attempt, dataf$question_number, dataf$correct, dataf$skipped)
table(duplicated(a))
##dataf2 <- dataf[,c(7, 9, 10, 12, 14)]
#dup <- which(duplicated(dataf2), TRUE)
#dataf <- dataf[-dup,]
Matome, kad dubliavosi, tai ištriname besidubliavusius duomenis:
dataf=dataf[!duplicated(a),]
a=data.frame(dataf$user, dataf$lesson_name, dataf$attempt, dataf$question_number, dataf$correct, dataf$skipped)
table(duplicated(a))
dataf=dataf[!duplicated(a),]
a=data.frame(dataf$user, dataf$lesson_name, dataf$attempt, dataf$question_number, dataf$correct, dataf$skipped)
table(duplicated(a))
a=data.frame(dataf$user, dataf$lesson_name, dataf$attempt, dataf$question_number, dataf$correct, dataf$skipped)
table(duplicated(a))
##dataf2 <- dataf[,c(7, 9, 10, 12, 14)]
#dup <- which(duplicated(dataf2), TRUE)
#dataf <- dataf[-dup,]
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
# Chunk 2
dataf=read.csv("R_programing_swirlResults.csv", stringsAsFactors = FALSE)
View(dataf)
# Chunk 3
sapply(dataf, class)
# Chunk 4
dataf <- transform(dataf, datetime = as.POSIXlt(datetime), sysTime = as.POSIXlt(sysTime) )
# Chunk 5
unique(dataf$user)
# Chunk 6
c=dataf$user %in% c("1vbutkus", "aaa", "testas")
dataf=dataf[!c,]
unique(dataf$user)
# Chunk 7
dataf$user[dataf$user=="gyse3054"] <- "gyse"
dataf$user[dataf$user=="Juste" | dataf$user=="ju" | dataf$user=="j"] <- "juste"
dataf$user[dataf$user=="rokasalek"] <- "rokasaleks"
unique(dataf$user)
# Chunk 8
a=data.frame(dataf$user, dataf$lesson_name, dataf$attempt, dataf$question_number, dataf$correct, dataf$skipped)
table(duplicated(a))
dataf=dataf[!duplicated(a),]
a=data.frame(dataf$user, dataf$lesson_name, dataf$attempt, dataf$question_number, dataf$correct, dataf$skipped)
table(duplicated(a))
table(m[m$skipped==TRUE,7])
table(dataf[dataf$skipped==TRUE,7])
c=dataf$user %in% c("Dariukxas", "Domante Bulovaite", "Greta", "gretajes", "gyse3054", "juste", "Juste", "Karolina", "kestous", "ogadova", "ojautakaite",  "Raigardas", "rokasaleks", "SandraKozlovskaja", "simonalevickaite", "sindeivydas", "j" , "ju")
table(dataf[!(c),7])
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
# Chunk 2
dataf=read.csv("R_programing_swirlResults.csv", stringsAsFactors = FALSE)
View(dataf)
# Chunk 3
sapply(dataf, class)
# Chunk 4
dataf <- transform(dataf, datetime = as.POSIXlt(datetime), sysTime = as.POSIXlt(sysTime) )
# Chunk 5
unique(dataf$user)
# Chunk 6
c=dataf$user %in% c("1vbutkus", "aaa", "testas")
dataf=dataf[!c,]
unique(dataf$user)
# Chunk 7
dataf$user[dataf$user=="gyse3054"] <- "gyse"
dataf$user[dataf$user=="Juste" | dataf$user=="ju" | dataf$user=="j"] <- "juste"
dataf$user[dataf$user=="rokasalek"] <- "rokasaleks"
unique(dataf$user)
# Chunk 8
a=data.frame(dataf$user, dataf$lesson_name, dataf$attempt, dataf$question_number, dataf$correct, dataf$skipped)
table(duplicated(a))
# Chunk 9
dataf=dataf[!duplicated(a),]
a=data.frame(dataf$user, dataf$lesson_name, dataf$attempt, dataf$question_number, dataf$correct, dataf$skipped)
table(duplicated(a))
# Chunk 10
table(dataf[dataf$skipped==TRUE,7])
# Chunk 11
c=dataf$user %in% c("Dariukxas", "Domante Bulovaite", "Greta", "gretajes", "gyse3054", "juste", "Juste", "Karolina", "kestous", "ogadova", "ojautakaite",  "Raigardas", "rokasaleks", "SandraKozlovskaja", "simonalevickaite", "sindeivydas", "j" , "ju")
table(dataf[!(c),7])
# Chunk 12
c=dataf$user %in% c("aipe00", "edba2903", "emru3000", "MildaPie", "simona1234", "zagnyte" )
n=dataf[c,]
# Chunk 13
d=data.frame(n$user, n$lesson_name)
d2=d[!duplicated(d), ]
table(d2[,1])
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
# Chunk 2
dataf=read.csv("R_programing_swirlResults.csv", stringsAsFactors = FALSE)
View(dataf)
# Chunk 3
sapply(dataf, class)
# Chunk 4
dataf <- transform(dataf, datetime = as.POSIXlt(datetime), sysTime = as.POSIXlt(sysTime) )
# Chunk 5
unique(dataf$user)
# Chunk 6
c=dataf$user %in% c("1vbutkus", "aaa", "testas")
dataf=dataf[!c,]
unique(dataf$user)
# Chunk 7
dataf$user[dataf$user=="gyse3054"] <- "gyse"
dataf$user[dataf$user=="Juste" | dataf$user=="ju" | dataf$user=="j"] <- "juste"
dataf$user[dataf$user=="rokasalek"] <- "rokasaleks"
unique(dataf$user)
# Chunk 8
a=data.frame(dataf$user, dataf$lesson_name, dataf$attempt, dataf$question_number, dataf$correct, dataf$skipped)
table(duplicated(a))
# Chunk 9
dataf=dataf[!duplicated(a),]
a=data.frame(dataf$user, dataf$lesson_name, dataf$attempt, dataf$question_number, dataf$correct, dataf$skipped)
table(duplicated(a))
# Chunk 10
table(dataf[dataf$skipped==TRUE,7])
# Chunk 11
c=dataf$user %in% c("Dariukxas", "Domante Bulovaite", "Greta", "gretajes", "gyse3054", "juste", "Juste", "Karolina", "kestous", "ogadova", "ojautakaite",  "Raigardas", "rokasaleks", "SandraKozlovskaja", "simonalevickaite", "sindeivydas", "j" , "ju")
table(dataf[!(c),7])
# Chunk 12
c=dataf$user %in% c("aipe00", "edba2903", "emru3000", "MildaPie", "simona1234", "zagnyte" )
n=dataf[c,]
# Chunk 13
d=data.frame(n$user, n$lesson_name)
d2=d[!duplicated(d), ]
# Chunk 14
table(d2[,1])
sk=dataf[!(dataf$user=="aipe00" | dataf$user=="emru3000" | dataf$user=="simona1234" | dataf$user=="zagnyte"),]
sk
sk=dataf[!(dataf$user=="aipe00" | dataf$user=="emru3000" | dataf$user=="simona1234" | dataf$user=="zagnyte"),]
sk1=data.frame(sk$user, sk$lesson_name)
sk2=sk1[!duplicated(sk1), ]
table(sk2[,1])
table(sk[sk$skipped==TRUE,7])
unique(gyse$lesson_name)
unique(Domnante Bulovaite$lesson_name)
unique(Domante Bulovaite$lesson_name)
unique("Domante Bulovaite"$lesson_name)
unique(Greta$lesson_name)
unique(dataf$user)
unique(Domante Bulovaite$user)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
# Chunk 2
dataf=read.csv("R_programing_swirlResults.csv", stringsAsFactors = FALSE)
View(dataf)
# Chunk 3
sapply(dataf, class)
# Chunk 4
dataf <- transform(dataf, datetime = as.POSIXlt(datetime), sysTime = as.POSIXlt(sysTime) )
# Chunk 5
unique(dataf$user)
# Chunk 6
c=dataf$user %in% c("1vbutkus", "aaa", "testas")
dataf=dataf[!c,]
unique(dataf$user)
# Chunk 7
dataf$user[dataf$user=="gyse3054"] <- "gyse"
dataf$user[dataf$user=="Juste" | dataf$user=="ju" | dataf$user=="j"] <- "juste"
dataf$user[dataf$user=="rokasalek"] <- "rokasaleks"
unique(dataf$user)
# Chunk 8
a=data.frame(dataf$user, dataf$lesson_name, dataf$attempt, dataf$question_number, dataf$correct, dataf$skipped)
table(duplicated(a))
# Chunk 9
dataf=dataf[!duplicated(a),]
a=data.frame(dataf$user, dataf$lesson_name, dataf$attempt, dataf$question_number, dataf$correct, dataf$skipped)
table(duplicated(a))
# Chunk 10
table(dataf[dataf$skipped==TRUE,7])
# Chunk 11
c=dataf$user %in% c("Dariukxas", "Domante Bulovaite", "Greta", "gretajes", "gyse3054", "juste", "Juste", "Karolina", "kestous", "ogadova", "ojautakaite",  "Raigardas", "rokasaleks", "SandraKozlovskaja", "simonalevickaite", "sindeivydas", "j" , "ju")
table(dataf[!(c),7])
# Chunk 12
c=dataf$user %in% c("aipe00", "edba2903", "emru3000", "MildaPie", "simona1234", "zagnyte" )
n=dataf[c,]
# Chunk 13
d=data.frame(n$user, n$lesson_name)
d2=d[!duplicated(d), ]
# Chunk 14
table(d2[,1])
# Chunk 15
sk=dataf[!(dataf$user=="aipe00" | dataf$user=="emru3000" | dataf$user=="simona1234" | dataf$user=="zagnyte"),]
# Chunk 16
sk1=data.frame(sk$user, sk$lesson_name)
sk2=sk1[!duplicated(sk1), ]
table(sk2[,1])
# Chunk 17
table(sk[sk$skipped==TRUE,7])
unique(Domante Bulovaite$user)
Domante <- subset(dataf, user == "Domante Bulovaite")
unique(Domante$lesson_name)
Domante2 <- split(Domante, Domante$skipped)
nrow(domante2$`TRUE`)
Domante2 <- split(Domante, Domante$skipped)
nrow(Domante2$`TRUE`)
which(Domante, Domante$skipped)
?which
domante <- split(Domante Bulovaite, Domante Bulovaite$skipped)
domante$`TRUE`
unique(Domante$lesson_name)
Domante3 <- split(Domante, Domante$skipped)
Domante3$`TRUE`
